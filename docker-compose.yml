version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik_proxy
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik_network
      - --entrypoints.web.address=:80
      - --log.level=INFO
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`ops.localhost`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"

  julian-neo4j:
    image: neo4j:latest
    container_name: neo4j_db_1
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
  
    volumes:
      - neo4j_data:/data
      - ./import:/import
    networks:
      - traefik_network

  backend:
    build: ./backend
    restart: unless-stopped
    depends_on:
      - julian-neo4j
      - traefik
    env_file:
      - .env
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      # Router principal
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.service=api-service"
      # Service
      - "traefik.http.services.api-service.loadbalancer.server.port=3000"

volumes:
  neo4j_data:

networks:
  traefik_network:
    driver: bridge